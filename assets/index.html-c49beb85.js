import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as s,c as d,a as t,b as e,d as r,w as l,e as c}from"./app-2f97e8dd.js";const h={},_=t("div",{style:{"text-align":"center"}},[t("p",null,"尤苏奈尔基本外发计划：Alist Mobile")],-1),m=t("h3",{id:"它是什么",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#它是什么","aria-hidden":"true"},"#"),e(" 它是什么？")],-1),p={href:"https://alist.nn.ci/zh/",target:"_blank",rel:"noopener noreferrer"},u=c('<h3 id="有何修改" tabindex="-1"><a class="header-anchor" href="#有何修改" aria-hidden="true">#</a> 有何修改？</h3><p>Alist Mobile 默认在sqlite3的db文件里面配置了用户名和密码为user，并且默认挂载设备本地的/sdcard文件夹到/home路径，方便使用<br> 并且，模块会自动获取WiFi的内网IP地址，修改模块描述，方便同一局域网使用<br> 模块默认配置Alist端口为80端口，因为懒得访问时额外添加端口，并且关闭了log<br> 模块默认会把Alist数据存储文件放到/data/adb/ltd.womi.mod/alist，实现更新不重置数据，只有卸载模块才会清理数据</p><h3 id="环境需求" tabindex="-1"><a class="header-anchor" href="#环境需求" aria-hidden="true">#</a> 环境需求</h3><p>由于Alist官方只提供了arm64、arm和x86_64架构的musl交叉编译的程序文件，所以不支持x86架构(我当然也不会去编译)<br> 虽然安装包内同时放了三个架构的程序文件，但是都经过了高压缩率压缩，安装包体积仅有30兆左右</p><h3 id="模块下载" tabindex="-1"><a class="header-anchor" href="#模块下载" aria-hidden="true">#</a> 模块下载</h3>',5);function b(f,x){const n=a("ExternalLinkIcon"),i=a("RouterLink");return s(),d("div",null,[_,m,t("p",null,[e("Alist Mobile是基于"),t("a",p,[e("Alist"),r(n)]),e("原版进行了压缩和db配置的模块，预配置了部分参数")]),u,t("p",null,[e("请前往"),r(i,{to:"/zh-CN/file.html"},{default:l(()=>[e("下载中心")]),_:1}),e("下载最新版模块")])])}const N=o(h,[["render",b],["__file","index.html.vue"]]);export{N as default};
